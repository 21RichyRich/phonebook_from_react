{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\react\\\\phonebook_developer_test__\\\\src\\\\TaskListContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nexport const TaskListContext = /*#__PURE__*/createContext();\n\nconst TaskListContextProvider = props => {\n  _s();\n\n  const initialState = JSON.parse(localStorage.getItem('tasks', 'phoneNumber')) || [];\n  const [tasks, setTasks] = useState(initialState);\n  const [phoneNumber, setPhoneNumber] = useState(initialState);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks, phoneNumber));\n  }, [tasks]);\n  const [editItem, setEditItem] = useState(null); // Add tasks\n\n  const addTask = title => {\n    setTasks([...tasks, {\n      title,\n      id: uuidv4()\n    }]);\n    setTasks([...tasks, {\n      title,\n      id: uuidv4()\n    }]);\n  };\n\n  const addTaskNumber = phoneNumber => {\n    setPhoneNumber([...phoneNumber, {\n      phoneNumber,\n      id: uuidv4()\n    }]);\n  }; // Remove tasks\n\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Clear tasks\n\n\n  const clearList = () => {\n    setTasks([]);\n  }; // Find task\n\n\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id);\n    setEditItem(item);\n  }; // Edit task\n\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map(task => task.id === id ? {\n      title,\n      id\n    } : task);\n    console.log(newTasks);\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  const editTaskNumber = (phoneNumber, id) => {\n    const newTasks = phoneNumber.map(task => task.id === id ? {\n      phoneNumber,\n      id\n    } : task);\n    console.log(newTasks);\n    setPhoneNumber(newTasks);\n    setEditItem(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskListContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask,\n      clearList,\n      findItem,\n      editTask,\n      editTaskNumber,\n      addTaskNumber,\n      editItem\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskListContextProvider, \"3uv8jKv+9g1FWKdI/yJng5htkYo=\");\n\n_c = TaskListContextProvider;\nexport default TaskListContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListContextProvider\");","map":{"version":3,"sources":["C:/Users/User/Documents/react/phonebook_developer_test__/src/TaskListContext.js"],"names":["React","createContext","useState","useEffect","v4","uuidv4","TaskListContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","tasks","setTasks","phoneNumber","setPhoneNumber","setItem","stringify","editItem","setEditItem","addTask","title","id","addTaskNumber","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","editTaskNumber","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const TaskListContext = createContext()\r\n\r\n\r\nconst TaskListContextProvider = props => {\r\n  const initialState = JSON.parse(localStorage.getItem('tasks','phoneNumber')) || []\r\n  \r\n\r\n  const [tasks, setTasks] = useState(initialState)\r\n  const [phoneNumber,setPhoneNumber] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks,phoneNumber))\r\n  }, [tasks])\r\n\r\n  const [editItem, setEditItem] = useState(null)\r\n\r\n  // Add tasks\r\n  const addTask = title => {\r\n    setTasks([...tasks, { title, id: uuidv4() }])\r\n    setTasks([...tasks, { title, id: uuidv4() }])\r\n\r\n  }\r\n  const addTaskNumber = phoneNumber => {\r\n    setPhoneNumber([...phoneNumber, { phoneNumber, id: uuidv4() }])\r\n  }\r\n\r\n  // Remove tasks\r\n  const removeTask = id => {\r\n    setTasks(tasks.filter(task => task.id !== id))\r\n  }\r\n\r\n  // Clear tasks\r\n  const clearList = () => {\r\n    setTasks([])\r\n  }\r\n\r\n  // Find task\r\n  const findItem = id => {\r\n    const item = tasks.find(task => task.id === id)\r\n\r\n    setEditItem(item)\r\n  }\r\n\r\n  // Edit task\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\r\n\r\n    console.log(newTasks)\r\n\r\n    setTasks(newTasks)\r\n    setEditItem(null)\r\n  }\r\n  const editTaskNumber = (phoneNumber, id) => {\r\n    const newTasks = phoneNumber.map(task => (task.id === id ? { phoneNumber, id } : task))\r\n\r\n    console.log(newTasks)\r\n\r\n    setPhoneNumber(newTasks)\r\n    setEditItem(null)\r\n  }\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editTaskNumber,\r\n        addTaskNumber,\r\n        editItem\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TaskListContextProvider\r\n\r\n"]},"metadata":{},"sourceType":"module"}