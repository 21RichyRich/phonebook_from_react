{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\react\\\\phonebook_developer_test__\\\\src\\\\delete-event.js\";\n\nconst Row = function (props) {\n  const {\n    checked,\n    value,\n    onChange,\n    onChecked\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: checked,\n      onChange: onChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Row;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateValue = (e, idx) => {\n      const rows = [...this.state.rows]; // copy array because we don't want to mutate the previous one\n\n      rows[idx].value = e.target.value;\n      this.setState({\n        rows\n      });\n    };\n\n    this.onChecked = idx => {\n      const rows = [...this.state.rows]; // copy array because we don't want to mutate the previous one\n\n      rows[idx].checked = !rows[idx].checked;\n      this.setState({\n        rows\n      });\n    };\n\n    this.addRow = () => {\n      const rows = [...this.state.rows, {\n        value: '',\n        checked: false\n      }];\n      this.setState({\n        rows\n      });\n    };\n\n    this.deleteRows = () => {\n      this.setState({\n        rows: this.state.rows.filter(e => !e.checked)\n      });\n    };\n\n    this.state = {\n      rows: [{\n        value: 'row1',\n        checked: false\n      }, {\n        value: 'row2',\n        checked: true\n      }, {\n        value: 'row3',\n        checked: false\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.rows.map((row, idx) => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          value: row.value,\n          checked: row.checked,\n          onChange: e => this.updateValue(e, idx),\n          onChecked: () => this.onChecked(idx)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addRow,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.deleteRows,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/User/Documents/react/phonebook_developer_test__/src/delete-event.js"],"names":["Row","props","checked","value","onChange","onChecked","App","React","Component","constructor","updateValue","e","idx","rows","state","target","setState","addRow","deleteRows","filter","render","map","row"],"mappings":"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","sourcesContent":["const Row = function(props){\r\n    const {checked, value, onChange, onChecked} = props;\r\n    return (\r\n      <div>\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={checked}\r\n          onChange={onChecked}\r\n          />\r\n        <input type =\"text\" value={value}  onChange={onChange}/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  class App extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        rows: [\r\n          {value: 'row1', checked: false},\r\n          {value: 'row2', checked: true},\r\n          {value: 'row3', checked: false},\r\n        ]\r\n      };\r\n    }\r\n    \r\n    updateValue = (e, idx) => {\r\n      const rows = [...this.state.rows];  // copy array because we don't want to mutate the previous one\r\n      rows[idx].value = e.target.value;\r\n      this.setState({\r\n          rows,\r\n      });\r\n    }\r\n    \r\n    onChecked = (idx) => {\r\n      const rows = [...this.state.rows];  // copy array because we don't want to mutate the previous one\r\n      rows[idx].checked = !rows[idx].checked;\r\n      this.setState({\r\n          rows,\r\n      });\r\n    } \r\n    \r\n    addRow = () => {\r\n      const rows = [...this.state.rows, \r\n                    {value:'', checked: false}\r\n                   ];\r\n      this.setState({\r\n          rows,\r\n      });\r\n    }\r\n    \r\n    deleteRows = () => {\r\n      this.setState({\r\n        rows: this.state.rows.filter(e => !e.checked)\r\n      });\r\n    }\r\n   \r\n    render(){\r\n      return(\r\n        <div>\r\n          {this.state.rows.map((row, idx) => {\r\n            return(\r\n                <Row \r\n                  key={idx} \r\n                  value={row.value}\r\n                  checked={row.checked}\r\n                  onChange={(e) => this.updateValue(e, idx)} \r\n                  onChecked={() => this.onChecked(idx)}\r\n                  /> \r\n              )\r\n          })\r\n          }\r\n          <button onClick={this.addRow}>\r\n            add \r\n          </button>\r\n          <button onClick={this.deleteRows}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n"]},"metadata":{},"sourceType":"module"}